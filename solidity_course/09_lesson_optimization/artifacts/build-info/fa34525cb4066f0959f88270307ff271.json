{
	"id": "fa34525cb4066f0959f88270307ff271",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"09_lesson_optimization/Optimization.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n\ncontract Op {\n    //  //1\n    // uint demo; \n\n    //  //2\n    // uint128 a = 1;\n    // uint128 b = 1;\n    // uint256 c = 1;\n\n    // // 3\n    // bytes32 public hash = 0x9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658;\n\n    // // 4\n    // mapping(address => uint) payments;\n    // function pay() external payable {\n    //     require(msg.sender != address(0), \"zero address\");\n    //     payments[msg.sender] = msg.value;\n    // }\n\n    // // 5\n    // mapping(address => uint) payments;\n\n    // // 6\n    // uint[10] payments;\n\n    //  7\n    uint c = 5;\n    uint d;\n    function calc() public {\n        uint a = 1 + c;\n        \n    }\n}\n\ncontract Un {\n    // // 1\n    // uint demo = 0;\n    \n    // // 2\n    // uint128 a = 1;\n    // uint256 c = 1;\n    // uint128 b = 1;\n\n    // // 3\n    // bytes32 public hash = keccak256(\n    //     abi.encodePacked(\"test\")\n    // );\n\n    // // 4\n    // mapping(address => uint) payments;\n    // function pay() external payable {\n    //     address _from = msg.sender;\n    //     require(_from != address(0), \"zero address\");\n    //     payments[_from] = msg.value;\n    // }\n\n    // // 5\n    // uint[] payments; // in 2 times more eth for deploying\n\n    // 6\n    uint[] payments;\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"09_lesson_optimization/Optimization.sol": {
				"Op": {
					"abi": [
						{
							"inputs": [],
							"name": "calc",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"09_lesson_optimization/Optimization.sol\":59:707  contract Op {... */\n  mstore(0x40, 0x80)\n    /* \"09_lesson_optimization/Optimization.sol\":623:624  5 */\n  0x05\n    /* \"09_lesson_optimization/Optimization.sol\":614:624  uint c = 5 */\n  0x00\n  sstore\n    /* \"09_lesson_optimization/Optimization.sol\":59:707  contract Op {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"09_lesson_optimization/Optimization.sol\":59:707  contract Op {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x96f1b6be\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"09_lesson_optimization/Optimization.sol\":642:705  function calc() public {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"09_lesson_optimization/Optimization.sol\":675:681  uint a */\n      0x00\n        /* \"09_lesson_optimization/Optimization.sol\":688:689  c */\n      dup1\n      sload\n        /* \"09_lesson_optimization/Optimization.sol\":684:685  1 */\n      0x01\n        /* \"09_lesson_optimization/Optimization.sol\":684:689  1 + c */\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n        /* \"09_lesson_optimization/Optimization.sol\":675:689  uint a = 1 + c */\n      swap1\n      pop\n        /* \"09_lesson_optimization/Optimization.sol\":665:705  {... */\n      pop\n        /* \"09_lesson_optimization/Optimization.sol\":642:705  function calc() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:312   */\n    tag_8:\n        /* \"#utility.yul\":47:50   */\n      0x00\n        /* \"#utility.yul\":66:86   */\n      tag_11\n        /* \"#utility.yul\":84:85   */\n      dup3\n        /* \"#utility.yul\":66:86   */\n      tag_12\n      jump\t// in\n    tag_11:\n        /* \"#utility.yul\":61:86   */\n      swap2\n      pop\n        /* \"#utility.yul\":100:120   */\n      tag_13\n        /* \"#utility.yul\":118:119   */\n      dup4\n        /* \"#utility.yul\":100:120   */\n      tag_12\n      jump\t// in\n    tag_13:\n        /* \"#utility.yul\":95:120   */\n      swap3\n      pop\n        /* \"#utility.yul\":254:255   */\n      dup3\n        /* \"#utility.yul\":186:252   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":182:256   */\n      sub\n        /* \"#utility.yul\":179:180   */\n      dup3\n        /* \"#utility.yul\":176:257   */\n      gt\n        /* \"#utility.yul\":173:280   */\n      iszero\n      tag_14\n      jumpi\n        /* \"#utility.yul\":260:278   */\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":173:280   */\n    tag_14:\n        /* \"#utility.yul\":304:305   */\n      dup3\n        /* \"#utility.yul\":301:302   */\n      dup3\n        /* \"#utility.yul\":297:306   */\n      add\n        /* \"#utility.yul\":290:306   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":318:395   */\n    tag_12:\n        /* \"#utility.yul\":355:362   */\n      0x00\n        /* \"#utility.yul\":384:389   */\n      dup2\n        /* \"#utility.yul\":373:389   */\n      swap1\n      pop\n        /* \"#utility.yul\":318:395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":401:581   */\n    tag_16:\n        /* \"#utility.yul\":449:526   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":446:447   */\n      0x00\n        /* \"#utility.yul\":439:527   */\n      mstore\n        /* \"#utility.yul\":546:550   */\n      0x11\n        /* \"#utility.yul\":543:544   */\n      0x04\n        /* \"#utility.yul\":536:551   */\n      mstore\n        /* \"#utility.yul\":570:574   */\n      0x24\n        /* \"#utility.yul\":567:568   */\n      0x00\n        /* \"#utility.yul\":560:575   */\n      revert\n\n    auxdata: 0xa2646970667358221220e4b99d4705f6f453b13ffbea88f6d2f68fd272c3928272a920fff577468e843864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600560005534801561001557600080fd5b50610106806100256000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806396f1b6be14602d575b600080fd5b60336035565b005b600080546001604391906048565b905050565b60006051826097565b9150605a836097565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115608c57608b60a1565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220e4b99d4705f6f453b13ffbea88f6d2f68fd272c3928272a920fff577468e843864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96F1B6BE EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x43 SWAP2 SWAP1 PUSH1 0x48 JUMP JUMPDEST SWAP1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x51 DUP3 PUSH1 0x97 JUMP JUMPDEST SWAP2 POP PUSH1 0x5A DUP4 PUSH1 0x97 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH1 0x8C JUMPI PUSH1 0x8B PUSH1 0xA1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xB9 SWAP14 SELFBALANCE SDIV 0xF6 DELEGATECALL MSTORE8 0xB1 EXTCODEHASH 0xFB 0xEA DUP9 0xF6 0xD2 0xF6 DUP16 0xD2 PUSH19 0xC3928272A920FFF577468E843864736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "59:648:0:-:0;;;623:1;614:10;;59:648;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@calc_16": {
									"entryPoint": 53,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"checked_add_t_uint256": {
									"entryPoint": 72,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 161,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:584:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "51:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "61:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "84:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "66:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "66:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "61:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "95:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "118:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "100:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "100:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "95:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "260:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "179:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "186:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "254:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "182:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "182:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "176:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:81:1"
															},
															"nodeType": "YulIf",
															"src": "173:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "290:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "301:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "304:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "297:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "297:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "290:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "38:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "41:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "47:3:1",
														"type": ""
													}
												],
												"src": "7:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "373:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "373:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "345:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "355:7:1",
														"type": ""
													}
												],
												"src": "318:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "429:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "446:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "449:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "439:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "439:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "439:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "543:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "546:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "536:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "536:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "536:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "567:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "570:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "560:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "560:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "401:180:1"
											}
										]
									},
									"contents": "{\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c806396f1b6be14602d575b600080fd5b60336035565b005b600080546001604391906048565b905050565b60006051826097565b9150605a836097565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115608c57608b60a1565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220e4b99d4705f6f453b13ffbea88f6d2f68fd272c3928272a920fff577468e843864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96F1B6BE EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x43 SWAP2 SWAP1 PUSH1 0x48 JUMP JUMPDEST SWAP1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x51 DUP3 PUSH1 0x97 JUMP JUMPDEST SWAP2 POP PUSH1 0x5A DUP4 PUSH1 0x97 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH1 0x8C JUMPI PUSH1 0x8B PUSH1 0xA1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xB9 SWAP14 SELFBALANCE SDIV 0xF6 DELEGATECALL MSTORE8 0xB1 EXTCODEHASH 0xFB 0xEA DUP9 0xF6 0xD2 0xF6 DUP16 0xD2 PUSH19 0xC3928272A920FFF577468E843864736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "59:648:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;642:63;;;:::i;:::-;;;675:6;688:1;;684;:5;;;;:::i;:::-;675:14;;665:40;642:63::o;7:305:1:-;47:3;66:20;84:1;66:20;:::i;:::-;61:25;;100:20;118:1;100:20;:::i;:::-;95:25;;254:1;186:66;182:74;179:1;176:81;173:107;;;260:18;;:::i;:::-;173:107;304:1;301;297:9;290:16;;7:305;;;;:::o;318:77::-;355:7;384:5;373:16;;318:77;;;:::o;401:180::-;449:77;446:1;439:88;546:4;543:1;536:15;570:4;567:1;560:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "52400",
								"executionCost": "22211",
								"totalCost": "74611"
							},
							"external": {
								"calc()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59,
									"end": 707,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 59,
									"end": 707,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 59,
									"end": 707,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 623,
									"end": 624,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 614,
									"end": 624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 614,
									"end": 624,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 59,
									"end": 707,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 59,
									"end": 707,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 707,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 59,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 707,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 59,
									"end": 707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 707,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 707,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 59,
									"end": 707,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 707,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59,
									"end": 707,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 59,
									"end": 707,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 707,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 707,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 707,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 59,
									"end": 707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 707,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e4b99d4705f6f453b13ffbea88f6d2f68fd272c3928272a920fff577468e843864736f6c63430008070033",
									".code": [
										{
											"begin": 59,
											"end": 707,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59,
											"end": 707,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59,
											"end": 707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59,
											"end": 707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59,
											"end": 707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59,
											"end": 707,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59,
											"end": 707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 707,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 59,
											"end": 707,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "PUSH",
											"source": 0,
											"value": "96F1B6BE"
										},
										{
											"begin": 59,
											"end": 707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 59,
											"end": 707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59,
											"end": 707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 707,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 642,
											"end": 705,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 642,
											"end": 705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 642,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 642,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 642,
											"end": 705,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 705,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 642,
											"end": 705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 642,
											"end": 705,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 642,
											"end": 705,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 642,
											"end": 705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 675,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 688,
											"end": 689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 684,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 684,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 684,
											"end": 689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 684,
											"end": 689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 684,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 684,
											"end": 689,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 684,
											"end": 689,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 684,
											"end": 689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 675,
											"end": 689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 642,
											"end": 705,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 312,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 47,
											"end": 50,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 84,
											"end": 85,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 66,
											"end": 86,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 61,
											"end": 86,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 61,
											"end": 86,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 118,
											"end": 119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 95,
											"end": 120,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 95,
											"end": 120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 254,
											"end": 255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 186,
											"end": 252,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 182,
											"end": 256,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 179,
											"end": 180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 176,
											"end": 257,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 173,
											"end": 280,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 173,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 173,
											"end": 280,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 260,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 173,
											"end": 280,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 173,
											"end": 280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 304,
											"end": 305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 301,
											"end": 302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 297,
											"end": 306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 290,
											"end": 306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 290,
											"end": 306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 318,
											"end": 395,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 318,
											"end": 395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 355,
											"end": 362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 373,
											"end": 389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 373,
											"end": 389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 401,
											"end": 581,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 401,
											"end": 581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 449,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 446,
											"end": 447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 546,
											"end": 550,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 536,
											"end": 551,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 570,
											"end": 574,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 567,
											"end": 568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"calc()": "96f1b6be"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"calc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"09_lesson_optimization/Optimization.sol\":\"Op\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"09_lesson_optimization/Optimization.sol\":{\"keccak256\":\"0xa03738447c44f475a42c7905bce156cbcb832541d07516dc44f8b4c2da89fa5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae93519c5e8db9448761b4da5e6060dcf9ab078a33698b51675c3493c32e688e\",\"dweb:/ipfs/QmXvC5quyfNRLi5CQ38wza8pGMoNtp7iXSGp8KNXqpFmcj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "09_lesson_optimization/Optimization.sol:Op",
								"label": "c",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 6,
								"contract": "09_lesson_optimization/Optimization.sol:Op",
								"label": "d",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Un": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"09_lesson_optimization/Optimization.sol\":709:1286  contract Un {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"09_lesson_optimization/Optimization.sol\":709:1286  contract Un {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220862175b126d1f7953642953419fe5a6c3a230cdc756d2eaee90a91a1c89d24c664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220862175b126d1f7953642953419fe5a6c3a230cdc756d2eaee90a91a1c89d24c664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0x21 PUSH22 0xB126D1F7953642953419FE5A6C3A230CDC756D2EAEE9 EXP SWAP2 LOG1 0xC8 SWAP14 0x24 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "709:577:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220862175b126d1f7953642953419fe5a6c3a230cdc756d2eaee90a91a1c89d24c664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0x21 PUSH22 0xB126D1F7953642953419FE5A6C3A230CDC756D2EAEE9 EXP SWAP2 LOG1 0xC8 SWAP14 0x24 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "709:577:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 709,
									"end": 1286,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 709,
									"end": 1286,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220862175b126d1f7953642953419fe5a6c3a230cdc756d2eaee90a91a1c89d24c664736f6c63430008070033",
									".code": [
										{
											"begin": 709,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 709,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 1286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 709,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"09_lesson_optimization/Optimization.sol\":\"Un\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"09_lesson_optimization/Optimization.sol\":{\"keccak256\":\"0xa03738447c44f475a42c7905bce156cbcb832541d07516dc44f8b4c2da89fa5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae93519c5e8db9448761b4da5e6060dcf9ab078a33698b51675c3493c32e688e\",\"dweb:/ipfs/QmXvC5quyfNRLi5CQ38wza8pGMoNtp7iXSGp8KNXqpFmcj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 20,
								"contract": "09_lesson_optimization/Optimization.sol:Un",
								"label": "payments",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> 09_lesson_optimization/Optimization.sol:35:9:\n   |\n35 |         uint a = 1 + c;\n   |         ^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 681,
					"file": "09_lesson_optimization/Optimization.sol",
					"start": 675
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> 09_lesson_optimization/Optimization.sol:34:5:\n   |\n34 |     function calc() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 705,
					"file": "09_lesson_optimization/Optimization.sol",
					"start": 642
				},
				"type": "Warning"
			}
		],
		"sources": {
			"09_lesson_optimization/Optimization.sol": {
				"ast": {
					"absolutePath": "09_lesson_optimization/Optimization.sol",
					"exportedSymbols": {
						"Op": [
							17
						],
						"Un": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "Op",
							"nameLocation": "68:2:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "c",
									"nameLocation": "619:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 17,
									"src": "614:10:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "614:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "623:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 6,
									"mutability": "mutable",
									"name": "d",
									"nameLocation": "635:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 17,
									"src": "630:6:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "630:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "665:40:0",
										"statements": [
											{
												"assignments": [
													10
												],
												"declarations": [
													{
														"constant": false,
														"id": 10,
														"mutability": "mutable",
														"name": "a",
														"nameLocation": "680:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 15,
														"src": "675:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 9,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "675:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 14,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "684:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 12,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "688:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "684:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "675:14:0"
											}
										]
									},
									"functionSelector": "96f1b6be",
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calc",
									"nameLocation": "651:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "665:0:0"
									},
									"scope": 17,
									"src": "642:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 22,
							"src": "59:648:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Un",
							"nameLocation": "718:2:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "payments",
									"nameLocation": "1275:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 21,
									"src": "1268:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 18,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1268:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 19,
										"nodeType": "ArrayTypeName",
										"src": "1268:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "709:577:0",
							"usedErrors": []
						}
					],
					"src": "33:1253:0"
				},
				"id": 0
			}
		}
	}
}